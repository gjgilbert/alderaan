#!/usr/bin/env python3

from pathlib import Path
from timeit import default_timer as timer

from alderaan.utils.pipeline import PipelineContext, invoke_subrecipe

BASE_PATH = Path(__file__).resolve().parents[2]

def main():
    print("\n\n\nstarting main pipeline")

    with PipelineContext() as context:
        context.BASE_PATH = BASE_PATH
        context.pipeline_start_time = timer()

        invoke_subrecipe(context, 'startup.rcp', progress=False)

        assert hasattr(context, "mission"), "undefined mission"
        assert hasattr(context, "target"), "undefined target"

        if context.mission == 'Kepler':
            invoke_subrecipe(context, 'load_kepler_data.rcp')
        else:
            raise ValueError(f"Unsupported mission : {context.mission}")
        
        invoke_subrecipe(context, 'regularize_omc.rcp')
        invoke_subrecipe(context, 'detrend_visits.rcp')
        invoke_subrecipe(context, 'quality_control.rcp')

    print("\n\n\nexiting main pipeline")


if __name__ == '__main__':
    main()
